// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductManagement.Data;

#nullable disable

namespace InvestmentApp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Investment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InvestmentDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InvestmentToolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InvestmentToolId");

                    b.HasIndex("UserId");

                    b.ToTable("Investments");
                });

            modelBuilder.Entity("InvestmentTool", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InvestmentTools");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f4e60157-f7f3-4ee4-9df9-9c3dbe58421f"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1653),
                            CurrentValue = 101500.00m,
                            IsDeleted = false,
                            Name = "Gold",
                            Symbol = "XAU"
                        },
                        new
                        {
                            Id = new Guid("8e40f0ff-54d9-4a55-9ac9-2c7c78194aa3"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1654),
                            CurrentValue = 1250.00m,
                            IsDeleted = false,
                            Name = "Silver",
                            Symbol = "XAG"
                        },
                        new
                        {
                            Id = new Guid("cc79ded1-ff56-43e8-b260-aeff13af0ea1"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1665),
                            CurrentValue = 2200.00m,
                            IsDeleted = false,
                            Name = "Apple Stock",
                            Symbol = "AAPL"
                        },
                        new
                        {
                            Id = new Guid("c18468ca-f9b3-4322-810c-bc0c624d8344"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1667),
                            CurrentValue = 1250000.00m,
                            IsDeleted = false,
                            Name = "Bitcoin",
                            Symbol = "BTC"
                        },
                        new
                        {
                            Id = new Guid("7f7372cf-ffac-4f07-83d3-e4296e91355c"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1669),
                            CurrentValue = 90000.00m,
                            IsDeleted = false,
                            Name = "Ethereum",
                            Symbol = "ETH"
                        },
                        new
                        {
                            Id = new Guid("2cb52aa1-9aab-4e68-ac75-374f06651188"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1671),
                            CurrentValue = 1500.00m,
                            IsDeleted = false,
                            Name = "Litecoin",
                            Symbol = "LTC"
                        },
                        new
                        {
                            Id = new Guid("401d118e-8bdd-4db7-98a6-d2e46d32606a"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1672),
                            CurrentValue = 2500.00m,
                            IsDeleted = false,
                            Name = "Tesla Stock",
                            Symbol = "TSLA"
                        },
                        new
                        {
                            Id = new Guid("062549c3-a85a-4c34-be4d-89455f7a49cf"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1674),
                            CurrentValue = 2000.00m,
                            IsDeleted = false,
                            Name = "Beyaz Eşya",
                            Symbol = "BEYAZE"
                        },
                        new
                        {
                            Id = new Guid("941110c2-34f9-4b92-ae8b-35ca94e835d4"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1676),
                            CurrentValue = 10.00m,
                            IsDeleted = false,
                            Name = "XRP (Ripple)",
                            Symbol = "XRP"
                        },
                        new
                        {
                            Id = new Guid("57a44fa2-0cac-40dd-8a2c-bd7cf388cf6e"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1677),
                            CurrentValue = 9000.00m,
                            IsDeleted = false,
                            Name = "Nasdaq-100 Index",
                            Symbol = "IXIC"
                        },
                        new
                        {
                            Id = new Guid("766339f4-2e5e-4aa3-8099-aac77330ab2e"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1682),
                            CurrentValue = 3500.00m,
                            IsDeleted = false,
                            Name = "Amazon Stock",
                            Symbol = "AMZN"
                        },
                        new
                        {
                            Id = new Guid("05e0d9a2-fac7-4e52-a26c-d357b5aa580e"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1684),
                            CurrentValue = 20000.00m,
                            IsDeleted = false,
                            Name = "Dow Jones Index",
                            Symbol = "DJI"
                        },
                        new
                        {
                            Id = new Guid("f780692a-25cf-487b-afb0-cce388794c9b"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1685),
                            CurrentValue = 15000.00m,
                            IsDeleted = false,
                            Name = "SP500 Index",
                            Symbol = "SPX"
                        },
                        new
                        {
                            Id = new Guid("9ebbf22c-71a1-41f5-8568-1721a04aabad"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1687),
                            CurrentValue = 200000.00m,
                            IsDeleted = false,
                            Name = "Platinum",
                            Symbol = "PLT"
                        },
                        new
                        {
                            Id = new Guid("08ce4272-c25c-46f6-bf9e-e391485c2f4f"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1689),
                            CurrentValue = 300000.00m,
                            IsDeleted = false,
                            Name = "Palladium",
                            Symbol = "PA"
                        },
                        new
                        {
                            Id = new Guid("a4a96235-0ad8-4ab6-809a-ead9244d2e05"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1690),
                            CurrentValue = 1500.00m,
                            IsDeleted = false,
                            Name = "Borsa İstanbul 100 Endeksi",
                            Symbol = "BIST100"
                        },
                        new
                        {
                            Id = new Guid("15ce08d4-52b5-4bcf-beb8-280d8d90ef32"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1692),
                            CurrentValue = 300.00m,
                            IsDeleted = false,
                            Name = "Natural Gas",
                            Symbol = "NG"
                        },
                        new
                        {
                            Id = new Guid("547a7f94-fb00-4d0f-86d9-2f75066dfe85"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1694),
                            CurrentValue = 750.00m,
                            IsDeleted = false,
                            Name = "Crude Oil",
                            Symbol = "CL"
                        },
                        new
                        {
                            Id = new Guid("b1712de2-3a0b-4d69-a1b2-aa399f534e41"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1697),
                            CurrentValue = 2000.00m,
                            IsDeleted = false,
                            Name = "Silver ETF",
                            Symbol = "SLV"
                        },
                        new
                        {
                            Id = new Guid("0f5fb133-c518-4106-a0d1-aefa2d944299"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1699),
                            CurrentValue = 6000.00m,
                            IsDeleted = false,
                            Name = "Bitcoin Cash",
                            Symbol = "BCH"
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalInvestment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a621c6c6-6cea-4ad9-bb50-44d35f66dca0"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1519),
                            IsDeleted = false,
                            PasswordHash = "GGz3dMl7YKHBBu9xjRCXCmoG4GvviVU9muZdk4qIbq4=",
                            TotalInvestment = 0.0m,
                            UserType = 1,
                            Username = "superadmin"
                        },
                        new
                        {
                            Id = new Guid("49166a54-7d2c-451e-8190-abef57947d5a"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1542),
                            IsDeleted = false,
                            PasswordHash = "jGl25bVBBBW96Qi9Te4V37Fnqchz/Eu4qB9vKrRIqRg=",
                            TotalInvestment = 0.0m,
                            UserType = 2,
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("1ee7c0c5-0d96-4950-bb47-398a72f76366"),
                            CreationDate = new DateTime(2024, 11, 10, 3, 39, 58, 456, DateTimeKind.Local).AddTicks(1556),
                            IsDeleted = false,
                            PasswordHash = "tsRYY4deNEh8o8FV7RRe/hKnRYHie+/sWqZhuO6Mpt0=",
                            TotalInvestment = 0.0m,
                            UserType = 3,
                            Username = "customer"
                        });
                });

            modelBuilder.Entity("Investment", b =>
                {
                    b.HasOne("InvestmentTool", "InvestmentTool")
                        .WithMany()
                        .HasForeignKey("InvestmentToolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User", "User")
                        .WithMany("Investments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvestmentTool");

                    b.Navigation("User");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("Investments");
                });
#pragma warning restore 612, 618
        }
    }
}
